package session_transcript

import (
	"bytes"
	"testing"
)

func TestOID4VPHandover(t *testing.T) {
	nonce := []byte("testnonce")
	clientID := "client123"
	responseURI := "https://response.uri"
	apu := "base64encodedapu"

	expectedOutput := []byte{
		0x83, 0xf6, 0xf6, 0x83, 0x58, 0x20, 0x10, 0x7d, 0xbe, 0x59,
		0xa0, 0xa3, 0xc7, 0xc2, 0x97, 0x00, 0xfa, 0x7b, 0x96, 0xe1,
		0x6a, 0xac, 0x6b, 0x62, 0xec, 0xb4, 0x4a, 0x1a, 0x61, 0xe9,
		0x9a, 0x5c, 0x96, 0x47, 0x1c, 0x4d, 0x4b, 0xa3, 0x58, 0x20,
		0x70, 0x59, 0x29, 0x8b, 0x90, 0xc5, 0xdf, 0x7a, 0xd8, 0x56,
		0xaa, 0xbf, 0x2c, 0x89, 0xad, 0x2e, 0x37, 0x4a, 0xb1, 0xce,
		0xdf, 0x39, 0x55, 0xcc, 0x09, 0xc4, 0x42, 0xa0, 0xa9, 0x40,
		0x2a, 0x89, 0x69, 0x74, 0x65, 0x73, 0x74, 0x6e, 0x6f, 0x6e,
		0x63, 0x65,
	}

	transcript, err := OID4VPHandover(nonce, clientID, responseURI, apu)
	if err != nil {
		t.Fatalf("unexpected error: %v", err)
	}
	if !bytes.Equal(transcript, expectedOutput) {
		t.Errorf("expected %v, got %v", expectedOutput, transcript)
	}
}
